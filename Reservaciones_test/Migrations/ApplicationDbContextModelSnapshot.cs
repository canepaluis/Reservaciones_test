// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reservaciones_test.Data;

namespace Reservaciones_test.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reservaciones_test.Models.Descripciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<int>("ServiciosId")
                        .HasColumnType("int");

                    b.Property<int>("T_HabitacionesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.HasIndex("ServiciosId");

                    b.HasIndex("T_HabitacionesId");

                    b.ToTable("Descripciones");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Destinos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Habitaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DescripcionId")
                        .HasColumnType("int");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DescripcionId");

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Hoteles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.ToTable("Hoteles");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Reservaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantadultos")
                        .HasColumnType("int");

                    b.Property<int>("Cantmenores")
                        .HasColumnType("int");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("HabitacionId")
                        .HasColumnType("int");

                    b.Property<int?>("HabitacionesId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelesId")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("habitacionId")
                        .HasColumnType("int");

                    b.Property<int>("hotelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.HasIndex("HabitacionesId");

                    b.HasIndex("HotelesId");

                    b.HasIndex("habitacionId");

                    b.HasIndex("hotelId");

                    b.ToTable("Reservaciones");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Servicios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("Reservaciones_test.Models.T_Habitaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("T_Habitaciones");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Descripciones", b =>
                {
                    b.HasOne("Reservaciones_test.Models.Destinos", "Destino")
                        .WithMany("Descripcion")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reservaciones_test.Models.Servicios", "Servicio")
                        .WithMany("Descripcion")
                        .HasForeignKey("ServiciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reservaciones_test.Models.T_Habitaciones", "T_habitacion")
                        .WithMany("Descripcion")
                        .HasForeignKey("T_HabitacionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");

                    b.Navigation("Servicio");

                    b.Navigation("T_habitacion");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Habitaciones", b =>
                {
                    b.HasOne("Reservaciones_test.Models.Descripciones", "Descripcion")
                        .WithMany("Habitacion")
                        .HasForeignKey("DescripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Descripcion");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Hoteles", b =>
                {
                    b.HasOne("Reservaciones_test.Models.Destinos", "Destino")
                        .WithMany("Hotel")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Reservaciones", b =>
                {
                    b.HasOne("Reservaciones_test.Models.Destinos", "destino")
                        .WithMany("Reservacion")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reservaciones_test.Models.Habitaciones", null)
                        .WithMany("Reservacion")
                        .HasForeignKey("HabitacionesId");

                    b.HasOne("Reservaciones_test.Models.Hoteles", null)
                        .WithMany("Reservacion")
                        .HasForeignKey("HotelesId");

                    b.HasOne("Reservaciones_test.Models.Habitaciones", "habitacion")
                        .WithMany()
                        .HasForeignKey("habitacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Reservaciones_test.Models.Hoteles", "hotel")
                        .WithMany()
                        .HasForeignKey("hotelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("destino");

                    b.Navigation("habitacion");

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Descripciones", b =>
                {
                    b.Navigation("Habitacion");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Destinos", b =>
                {
                    b.Navigation("Descripcion");

                    b.Navigation("Hotel");

                    b.Navigation("Reservacion");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Habitaciones", b =>
                {
                    b.Navigation("Reservacion");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Hoteles", b =>
                {
                    b.Navigation("Reservacion");
                });

            modelBuilder.Entity("Reservaciones_test.Models.Servicios", b =>
                {
                    b.Navigation("Descripcion");
                });

            modelBuilder.Entity("Reservaciones_test.Models.T_Habitaciones", b =>
                {
                    b.Navigation("Descripcion");
                });
#pragma warning restore 612, 618
        }
    }
}
